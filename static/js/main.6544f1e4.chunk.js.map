{"version":3,"sources":["components/TodoForm.js","components/Todo.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","className","onChange","target","placeholder","Todo","todo","index","completeTodo","deleteTodo","style","textDecoration","isCompleted","text","onClick","App","todos","setTodos","newTodos","splice","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAkBeA,MAhBf,YAA8B,IAAXC,EAAU,EAAVA,QAAU,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAUzB,OACE,sBAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACEJ,IACJF,EAAQE,GACRC,EAAS,MAIT,SACE,uBAAOI,KAAK,OAAOC,UAAU,QAAQN,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,QAAQS,YAAY,mBCAjGC,MAZf,YAAwD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WACtC,OACE,sBAAKC,MAAO,CAACC,eAAgBL,EAAKM,YAAc,eAAiB,IAAKX,UAAU,OAAhF,UACIK,EAAKO,KACP,gCACE,wBAAQC,QAAS,kBAAMN,EAAaD,IAApC,sBACA,wBAAQO,QAAS,kBAAML,EAAWF,IAAlC,2BC2CKQ,MA9Cf,WAAgB,IAAD,EACarB,mBAAS,CACjC,CACEmB,KAAM,oBACND,aAAa,GAEf,CACEC,KAAM,wBACND,aAAa,GAEf,CACEC,KAAM,iBACND,aAAa,KAZJ,mBACNI,EADM,KACCC,EADD,KAsBPT,EAAe,SAAAD,GACnB,IAAMW,EAAQ,YAAOF,GACrBE,EAASX,GAAOK,aAAeM,EAASX,GAAOK,YAC/CK,EAASC,IAGLT,EAAa,SAAAF,GACjB,IAAMW,EAAQ,YAAOF,GACrBE,EAASC,OAAOZ,EAAO,GACvBU,EAASC,IAGX,OACE,qBAAKjB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACGe,EAAMI,KAAI,SAACd,EAAMC,GAAP,OACT,cAAC,EAAD,CAAkBA,MAAOA,EAAOD,KAAMA,EAAME,aAAcA,EAAcC,WAAYA,GAAzEF,MAEb,cAAC,EAAD,CAAUd,QAvBA,SAAAoB,GACd,IAAMK,EAAQ,sBAAOF,GAAP,CAAc,CAAEH,UAC9BI,EAASC,YCpBbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6544f1e4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TodoForm({addTodo}) {\r\n    const [value, setValue] = useState('');\r\n  \r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if(!value) return;\r\n      addTodo(value);\r\n      setValue('');\r\n    }\r\n  \r\n    return(\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add Todo...\"/>\r\n      </form>\r\n    )\r\n  }\r\nexport default TodoForm\r\n","import React from 'react'\r\n\r\nfunction Todo({todo, index, completeTodo, deleteTodo}) {\r\n    return(\r\n      <div style={{textDecoration: todo.isCompleted ? 'line-through' : ''}} className=\"todo\">\r\n        { todo.text }\r\n        <div>\r\n          <button onClick={() => completeTodo(index)}>Complete</button>\r\n          <button onClick={() => deleteTodo(index)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    ) \r\n  }\r\n\r\nexport default Todo\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport TodoForm from './components/TodoForm';\nimport Todo from './components/Todo';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: 'Learn about React',\n      isCompleted: false\n    },\n    {\n      text: 'Meet friend for lunch',\n      isCompleted: false\n    },\n    {\n      text: 'Build todo app',\n      isCompleted: false\n    }\n    \n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  }\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  }\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo key={index} index={index} todo={todo} completeTodo={completeTodo} deleteTodo={deleteTodo}/>\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}